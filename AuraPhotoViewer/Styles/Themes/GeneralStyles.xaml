<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="http://schemas.microsoft.com/winfx/2006/xaml/"
    xmlns:converters="clr-namespace:AuraPhotoViewer.Styles.Converters">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="..\Themes\AuraCircleIconButton.xaml" />        
    </ResourceDictionary.MergedDictionaries>
    <converters:RightMarginConverter x:Key="RightMarginConverter" />
	<converters:UriToBitmapConverter x:Key="UriToBitmapConverter" />
    <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    
	<!--Window colors.-->
	<Color x:Key="WindowColor">#EAEAEA</Color>
	<Color x:Key="ControlBorderBrush">#CCCCCC</Color>
    
	<!--Window control-specific resources.-->
	<Color x:Key="TextForeground">#666666</Color>
	<Color x:Key="PathButtonFillColor">Black</Color>
	<Color x:Key="PathButtonFillMouseOverColor">#5C90FF</Color>
	<Color x:Key="WindowButtonMouseOverColor">White</Color>
    
	<!--ListView control-specific resources.-->
	<Color x:Key="SelectedBackgroundColor">#5C90FF</Color>
	<Color x:Key="SelectedUnfocusedColor">#87ADFF</Color>
	<Color x:Key="ArrowFillColor">Gray</Color>
	<Color x:Key="ArrowMouseOverColor">#5C90FF</Color>
	<Color x:Key="ThumbFillColor">Gray</Color>
	<Color x:Key="ThumbMouseOverColor">#5C90FF</Color>

    <!--Thumbnail Panel control-specific resources.-->
    <Color x:Key="ExpanderToggleBorderBrush">#A5A5A5</Color>
    <Color x:Key="PressedFillColor">Gray</Color>

    <!--Window Style-->
	<Style x:Key="AuraWindowStyle" TargetType="{x:Type Window}">
		<Setter Property="WindowChrome.WindowChrome">
			<Setter.Value>
				<WindowChrome GlassFrameThickness="0" CornerRadius="0" ResizeBorderThickness="4"/>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Window}">
					<Border BorderThickness="1" Margin="2">
						<Border.BorderBrush>
							<SolidColorBrush Color="{StaticResource ControlBorderBrush}" />
						</Border.BorderBrush>
						<Grid>
							<Grid.Background>
								<SolidColorBrush Color="{StaticResource WindowColor}" />
							</Grid.Background>
							<Border Background="Transparent" BorderThickness="0" Margin="{x:Static SystemParameters.WindowNonClientFrameThickness}">
								<ContentPresenter Content="{TemplateBinding Content}" />
							</Border>
                            <Grid VerticalAlignment="Top" HorizontalAlignment="Stretch" Height="{x:Static SystemParameters.CaptionHeight}">
                                <Grid.Background>
                                    <SolidColorBrush Color="{StaticResource ControlBorderBrush}" />
                                </Grid.Background>
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Left"	Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(WindowChrome.WindowChrome).ResizeBorderThickness}">
								    <Image Source="{TemplateBinding Icon}" Width="{x:Static SystemParameters.SmallIconWidth}" WindowChrome.IsHitTestVisibleInChrome="True"/>
								    <TextBlock Text="{TemplateBinding Title}" FontWeight="DemiBold" Margin="5,0,0,0">
									    <TextBlock.Foreground>
										    <SolidColorBrush Color="{StaticResource TextForeground}" />
									    </TextBlock.Foreground>
								    </TextBlock>
							    </StackPanel>
                                <StackPanel Orientation="Horizontal" FlowDirection="RightToLeft" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(WindowChrome.WindowChrome).ResizeBorderThickness, Converter={StaticResource RightMarginConverter}}">
                                    <Button KeyboardNavigation.TabIndex="3" Width="40" Height="17" Command="{x:Static SystemCommands.CloseWindowCommand}" Style="{DynamicResource CloseButton}" ToolTip="Close" WindowChrome.IsHitTestVisibleInChrome="True"/>
                                    <Button x:Name="MaximizeButton" KeyboardNavigation.TabIndex="4" Width="40" Height="17" Command="{x:Static SystemCommands.MaximizeWindowCommand}" Style="{DynamicResource MaximizeButton}" ToolTip="Maximize" WindowChrome.IsHitTestVisibleInChrome="True"/>
                                    <Button x:Name="MinimizeButton" KeyboardNavigation.TabIndex="5" Width="40" Height="17" Command="{x:Static SystemCommands.MinimizeWindowCommand}" Style="{DynamicResource MinimizeButton}" ToolTip="Minimize" WindowChrome.IsHitTestVisibleInChrome="True"/>
                                </StackPanel>
                            </Grid>
                        </Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="WindowState" Value="Maximized">
							<Setter TargetName="MaximizeButton" Property="ToolTip" Value="Restore"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="CloseButton" TargetType="{x:Type Button}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid x:Name="Close" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="Transparent">
						<Path x:Name="PartIcon" HorizontalAlignment="Center" Stretch="Uniform" Margin="0,3,0,3" Data="M0.50000498,0.5 L2.9380055,0.5511561 5.125006,3.0764948 7.312002,0.55116302 9.7500027,0.50000703 6.2863034,4.4174498 9.7500046,8.4170002 7.500008,8.4170002 5.1250075,5.7308758 2.7500032,8.4170049 0.5,8.4170049 3.9637094,4.4174479 z">
							<Path.Fill>
								<SolidColorBrush Color="{StaticResource PathButtonFillColor}" />
							</Path.Fill>
						</Path>
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Close" Property="Background" >
								<Setter.Value>
									<SolidColorBrush Color="{StaticResource WindowButtonMouseOverColor}" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="PartIcon" Property="Fill" >
								<Setter.Value>
									<SolidColorBrush Color="{StaticResource PathButtonFillMouseOverColor}" />
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="MaximizeButton" TargetType="{x:Type Button}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid x:Name="Maximize" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="Transparent">
						<Path x:Name="PartIcon" Margin="0,3,0,3" HorizontalAlignment="Center" Fill="Transparent" Stretch="Uniform" Data="M1,1.0000002 L1,1.8750001 9.25,1.8750001 9.25,1.0000002 z M0.5,0.5 L9.75,0.5 9.75,8.4169999 0.5,8.4169999 z M1,1.0000002 L9.25,1.0000002 9.25,1.8750001 1,1.8750001 z" >
							<Path.Stroke>
								<SolidColorBrush Color="{StaticResource PathButtonFillColor}" />
							</Path.Stroke>
						</Path>
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Maximize" Property="Background" >
								<Setter.Value>
									<SolidColorBrush Color="{StaticResource WindowButtonMouseOverColor}" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="PartIcon" Property="Stroke" >
								<Setter.Value>
									<SolidColorBrush Color="{StaticResource PathButtonFillMouseOverColor}" />
								</Setter.Value>
							</Setter>
						</Trigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=WindowState}" Value="Maximized">
							<Setter TargetName="PartIcon" Property="Data" Value="M0.5,0.5 L9.75,0.5 9.75,4.1750002 3.132,4.1750002 3.132,8.417 0.5,8.417 z M0.59999998,0.59999998 L9.6500004,0.59999998 L9.6500004,1.6 L0.59999998,1.6 z M3.632,4.6750002 L3.632,5.5500001 11.882,5.5500001 11.882,4.6750002 z M3.132,4.175 L12.382,4.175 12.382,12.092 3.132,12.092 z M3.632,4.6750002 L11.882,4.6750002 11.882,5.5500001 3.632,5.5500001 z"/>
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="MinimizeButton" TargetType="{x:Type Button}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid x:Name="Minimize" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="Transparent">
						<Path x:Name="PartIcon" Margin="14,10,14,3" HorizontalAlignment="Center" StrokeThickness="0" Stretch="UniformToFill"  Data="M0.6,0.6 L9.65,0.6 L9.65,1.6 L0.6,1.6 z">
							<Path.Fill>
								<SolidColorBrush Color="{StaticResource PathButtonFillColor}" />
							</Path.Fill>
						</Path>
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Minimize" Property="Background">
								<Setter.Value>
									<SolidColorBrush Color="{StaticResource WindowButtonMouseOverColor}" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="PartIcon" Property="Fill" >
								<Setter.Value>
									<SolidColorBrush Color="{StaticResource PathButtonFillMouseOverColor}" />
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    
	<!--ListView Styles-->
	<Style x:Key="ThumbnailListView"  TargetType="ListView">
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
		<Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
		<Setter Property="SelectionMode" Value="Single" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListView">
					<Border Name="Border" BorderThickness="1">
						<Border.Background>
							<SolidColorBrush Color="{StaticResource WindowColor}" />
						</Border.Background>
						<Border.BorderBrush>
							<SolidColorBrush Color="{StaticResource ControlBorderBrush}" />
						</Border.BorderBrush>
						<ScrollViewer Style="{DynamicResource ScrollViewerStyle}">
							<ItemsPresenter />
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Border" Property="Background">
								<Setter.Value>
									<SolidColorBrush Color="{DynamicResource WindowColor}" />
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<VirtualizingStackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ThumbnailListViewItem" TargetType="ListViewItem">
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="Border" SnapsToDevicePixels="true" Background="Transparent" Padding="3" Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ScrollViewer}}}"  Height="{Binding Path=ViewportHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ScrollViewer}}}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver" />
								<VisualState x:Name="Disabled" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Unselected" />
								<VisualState x:Name="Selected">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedBackgroundColor}" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SelectedUnfocused">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedUnfocusedColor}" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Image Source="{Binding ImageUri, Converter={StaticResource UriToBitmapConverter}}"  Stretch="UniformToFill" VerticalAlignment="Center" HorizontalAlignment="Center"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScrollViewerStyle" TargetType="ScrollViewer">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ScrollViewer">
					<Grid Background="{TemplateBinding Background}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<ScrollContentPresenter Name="PART_ScrollContentPresenter" KeyboardNavigation.DirectionalNavigation="Local" CanContentScroll="True" CanHorizontallyScroll="False" CanVerticallyScroll="False" />
						<ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Value="{TemplateBinding HorizontalOffset}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
						<ScrollBar Name="PART_VerticalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Value="{TemplateBinding VerticalOffset}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="Focusable" Value="false" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border x:Name="Border"	Margin="1" BorderThickness="0" Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver" >
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="0" Value="{StaticResource ArrowMouseOverColor}" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed" >
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="0" Value="{StaticResource ArrowMouseOverColor}" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Path x:Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" >
							<Path.Fill>
								<SolidColorBrush Color="{DynamicResource ArrowFillColor}"/>
							</Path.Fill>
						</Path>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="IsTabStop" Value="false" />
		<Setter Property="Focusable" Value="false" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border Background="Transparent" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="IsTabStop" Value="false" />
		<Setter Property="Focusable" Value="false" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" >
						<Border.Background>
							<SolidColorBrush Color="{DynamicResource ThumbFillColor}" />
						</Border.Background>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="0" Value="{StaticResource ThumbMouseOverColor}" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="0" Value="{StaticResource ThumbMouseOverColor}" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition MaxHeight="18" />
				<RowDefinition Height="0.00001*" />
				<RowDefinition MaxHeight="18" />
			</Grid.RowDefinitions>
			<Border Grid.RowSpan="3"	CornerRadius="2"	Background="Transparent" />
			<RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
			<Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
				<Track.DecreaseRepeatButton>
					<RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
				</Track.DecreaseRepeatButton>
				<Track.Thumb>
					<Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0">
						<Thumb.BorderBrush>
							<SolidColorBrush Color="{DynamicResource ControlBorderBrush}" />
						</Thumb.BorderBrush>
						<Thumb.Background>
							<SolidColorBrush Color="{DynamicResource WindowColor}" />
						</Thumb.Background>
					</Thumb>
				</Track.Thumb>
				<Track.IncreaseRepeatButton>
					<RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
				</Track.IncreaseRepeatButton>
			</Track>
			<RepeatButton Grid.Row="2" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z" />
		</Grid>
	</ControlTemplate>
	<ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition MaxWidth="18" />
				<ColumnDefinition Width="0.00001*" />
				<ColumnDefinition MaxWidth="18" />
			</Grid.ColumnDefinitions>
			<Border Grid.ColumnSpan="3"	CornerRadius="2"	Background="Transparent" />
			<RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
			<Track x:Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
				<Track.DecreaseRepeatButton>
					<RepeatButton Style="{StaticResource ScrollBarPageButton}"  Command="ScrollBar.PageLeftCommand" />
				</Track.DecreaseRepeatButton>
				<Track.Thumb>
					<Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1">
						<Thumb.BorderBrush>
							<SolidColorBrush Color="{DynamicResource ControlBorderBrush}" />
						</Thumb.BorderBrush>
						<Thumb.Background>
							<SolidColorBrush Color="{DynamicResource WindowColor}" />
						</Thumb.Background>
					</Thumb>
				</Track.Thumb>
				<Track.IncreaseRepeatButton>
					<RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
				</Track.IncreaseRepeatButton>
			</Track>
			<RepeatButton Grid.Column="2" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z" />
		</Grid>
	</ControlTemplate>
	<Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Horizontal">
				<Setter Property="Width" Value="Auto" />
				<Setter Property="Height" Value="18" />
				<Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
			</Trigger>
			<Trigger Property="Orientation" Value="Vertical">
				<Setter Property="Width" Value="18" />
				<Setter Property="Height" Value="Auto" />
				<Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
			</Trigger>
		</Style.Triggers>
	</Style>
    <Style x:Key="NavigationButtonPanel" TargetType="{x:Type DockPanel}">        
        <Setter Property="LastChildFill" Value="False" />
        <Setter Property="Opacity" Value="0.2" />
        <Setter Property="Background" Value="Transparent" />        
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}}"  Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard >
                            <DoubleAnimation Duration="0:0:0:1" To="1" Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard >
                            <DoubleAnimation Duration="0:0:1" To="0.2" Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>            
        </Style.Triggers>
    </Style>
    
    <!--
    <Style x:Key="ThumbnailCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ToolTip" Value="Thumbnail Panel" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border" Width="13" Height="13" CornerRadius="0" BorderThickness="1">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{StaticResource CheckBoxBorderBrush}" />
                                </Border.BorderBrush>
                                <Border.Background>
                                    <SolidColorBrush Color="{StaticResource WindowColor}" />
                                </Border.Background>
                                <Grid>
                                    <Path Width="7" Height="7" x:Name="CheckMark" RenderTransformOrigin="0.5,0.5" 
                                          Data="M31,1 L61,56 L0.99999987,56 z" Stretch="Uniform">                                        
                                        <Path.Fill>
                                            <SolidColorBrush Color="{StaticResource CheckBoxBorderBrush}" />
                                        </Path.Fill>
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform Angle="180"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>                                    
                                </Grid>
                            </Border>
                        </BulletDecorator.Bullet>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                      Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource PressedFillColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                      Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource PressedFillColor}" />
                                        </ColorAnimationUsingKeyFrames>                                                                              
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="CheckMark">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="180"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="CheckMark">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="180"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter Margin="4,0,0,0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            RecognizesAccessKey="True" />
                    </BulletDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    -->
    
    <ControlTemplate x:Key="ExpanderToggleButton" TargetType="{x:Type ToggleButton}">
        <Border x:Name="Border" BorderThickness="0,0,1,0">
            <Border.Background>
                <SolidColorBrush Color="{StaticResource WindowColor}" />
            </Border.Background>
            <Border.BorderBrush>
                <SolidColorBrush Color="{StaticResource ExpanderToggleBorderBrush}" />
            </Border.BorderBrush>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource PressedFillColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ArrowMouseOverColor}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>                        
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource PressedFillColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ArrowMouseOverColor}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="Arrow">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-180"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="Arrow">
                                <EasingDoubleKeyFrame KeyTime="0" Value="-180"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Path x:Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"
                  RenderTransformOrigin="0.5,0.5">
                <Path.Fill>
                    <SolidColorBrush Color="{StaticResource ArrowFillColor}" />
                </Path.Fill>
                <Path.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
        </Border>
    </ControlTemplate>

    <Style x:Key="{x:Type Expander}"  TargetType="{x:Type Expander}">      
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition x:Name="ContentRow" Height="Auto" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">                                   
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualState x:Name="Expanded" >
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Content" Storyboard.TargetProperty="(Border.Height)" From="0" To="150" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Collapsed" >
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Content" Storyboard.TargetProperty="(Border.Height)" From="150" To="0" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" Grid.Row="0" BorderThickness="1">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource ExpanderToggleBorderBrush}" />
                            </Border.BorderBrush>
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource WindowColor}" />
                            </Border.Background>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton OverridesDefaultStyle="True" Template="{StaticResource ExpanderToggleButton}"
                                              IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Background>
                                        <SolidColorBrush Color="{StaticResource WindowColor}" />
                                    </ToggleButton.Background>
                                </ToggleButton>
                                <ContentPresenter Grid.Column="1" Margin="4" ContentSource="Header" RecognizesAccessKey="True" />
                            </Grid>
                        </Border>
                        <Border x:Name="Content" Grid.Row="1" BorderThickness="1,0,1,1" Height="0">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource ExpanderToggleBorderBrush}" />
                            </Border.BorderBrush>
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource WindowColor}" />
                            </Border.Background>
                            <ContentPresenter Margin="4" />
                        </Border>
                    </Grid>                   
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>